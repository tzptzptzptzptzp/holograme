// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id          String   @id
  username    String
  nickname    String
  email       String
  location    String
  createdDate DateTime @default(now()) 
  updatedDate DateTime @updatedAt
}

model Favorite {
  id          Int      @id @default(autoincrement())
  userId      String
  url         String
  order       Int
  createdDate DateTime @default(now()) 
}

model ChatRoom {
  id             Int      @id @default(autoincrement())
  userId         String
  name           String
  description    String
  defaultMessage String
  createdDate    DateTime @default(now()) 
  updatedDate    DateTime @updatedAt

  messages    ChatMessage[]
}

model ChatMessage {
  id        Int      @id @default(autoincrement())
  userId    String
  roomId    Int
  content   String
  role      String
  date      DateTime @default(now())

  room      ChatRoom @relation(fields: [roomId], references: [id], onDelete: Cascade)
}

model ChatStandardPhrase {
  id          Int      @id @default(autoincrement())
  userId      String
  title       String
  content     String
  createdDate DateTime @default(now()) 
  updatedDate DateTime @updatedAt
}

model Clipboard {
  id        Int      @id @default(autoincrement())
  userId    String
  content   String
  date      DateTime @default(now())
}

model Memo {
  id          Int      @id @default(autoincrement())
  userId      String
  title       String
  content     String
  archived    Boolean  @default(false)
  createdDate DateTime @default(now()) 
  updatedDate DateTime @updatedAt
}
